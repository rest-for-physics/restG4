name: Validation

on:
  workflow_dispatch:
  workflow_call:

env:
  CMAKE_BUILD_TYPE: Release
  REST_INSTALL_PATH: /rest/restG4/install
  RESTG4_PATH: restG4
  BRANCH_NAME: ${{ github.head_ref || github.ref_name }}

defaults:
  run:
    shell: bash

jobs:
  precommit-config:
    name: Validate pre-commit config
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    steps:
      - name: Checkout restG4
        uses: rest-for-physics/framework/.github/actions/checkout@master
        with:
          branch: ${{ env.BRANCH_NAME }}
          repository: rest-for-physics/restG4
          path: ${{ env.RESTG4_PATH }}
      - name: Verify pre-commit config files match
        run: |
          cd ${{ env.RESTG4_PATH }}
          curl https://raw.githubusercontent.com/rest-for-physics/framework/master/scripts/validatePreCommitConfig.py | python

  framework-install:
    name: Install framework with restG4
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    steps:
      - name: Print version of dependencies for image
        run: version.sh
      - name: Build and install
        uses: rest-for-physics/framework/.github/actions/build@master
        with:
          cmake-flags: "-DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DREST_WELCOME=ON -DREST_G4=ON -DCMAKE_INSTALL_PREFIX=${{ env.REST_INSTALL_PATH }}"
          branch: ${{ env.BRANCH_NAME }}
      - name: Cache framework installation
        id: framework-install-restG4-cache
        uses: actions/cache@v3
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}

  check-installation:
    name: Check framework and restG4 are accessible
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ framework-install ]
    steps:
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Check libraries
        run: |
          echo $LD_LIBRARY_PATH
          ls -lht ${{ env.REST_INSTALL_PATH }}
          ls -lht ${{ env.REST_INSTALL_PATH }}/lib | grep .so
          ls -lht ${{ env.REST_INSTALL_PATH }}/bin
      - name: Check root
        run: |
          root-config --version
          root -b -q
      - name: Check framework
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cat ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cat ${{ env.REST_INSTALL_PATH }}/bin/rest-config
          rest-config --welcome
      - name: Check restG4
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          restG4 --help

  restG4-standalone-install:
    name: Install restG4 as a standalone application using the installed framework
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ framework-install, check-installation ]
    steps:
      - name: Checkout restG4
        uses: rest-for-physics/framework/.github/actions/checkout@master
        with:
          branch: ${{ env.BRANCH_NAME }}
          repository: rest-for-physics/restG4
          path: ${{ env.RESTG4_PATH }}
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Build as standalone
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.RESTG4_PATH }}
          mkdir -p build-standalone && cd build-standalone
          cmake ../ -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DCMAKE_INSTALL_PREFIX=/rest/restG4-standalone/install
          make -j4 install
          /rest/restG4-standalone/install/bin/restG4 --help

  restG4-examples-01:
    name: "Example 01: NLDBD"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/01.NLDBD/
          restG4 NLDBD.rml -o Run00001_NLDBD_Test.root
          restRoot -b -q Validate.C'("Run00001_NLDBD_Test.root")'

  restG4-examples-03:
    name: "Example 03: Fluorescence"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/03.Fluorescence/
          restG4 gamma.rml -o gamma_fluorescence.root
          restManager --c g4Analysis.rml --f gamma_fluorescence.root -o gamma_fluorescence_analysis.root
          restRoot -b -q Validate.C'("gamma_fluorescence_analysis.root")'

  restG4-examples-04:
    name: "Example 04: Cosmic Muons"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/04.MuonScan/
          restG4 MuonsFromPoint.rml -o MuonsFromPoint.root
          restRoot -b -q ValidateMuonsFromPoint.C'("MuonsFromPoint.root")'
          restG4 CosmicMuonsFromWall.rml -o CosmicMuonsFromWall.root
          restRoot -b -q ValidateCosmicMuonsFromWall.C'("CosmicMuonsFromWall.root")'
          restG4 CosmicMuonsFromCircle.rml -o CosmicMuonsFromCircle.root
          restRoot -b -q ValidateCosmicMuonsFromCircle.C'("CosmicMuonsFromCircle.root")'
          restG4 CosmicMuons.rml -o CosmicMuons.root
          restRoot -b -q ValidateCosmicMuons.C'("CosmicMuons.root")'

  restG4-examples-05:
    name: "Example 05: PandaX-III"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/05.PandaXIII/
          restG4 Xe136bb0n.rml -o Xe136bb0n.root
          restRoot -b -q Validate.C'("Xe136bb0n.root")'

  restG4-examples-06:
    name: "Example 06: Ion recoils"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/06.IonRecoils/
          restG4 recoils.rml -o Run00001_F20_Recoils.root
          restRoot -b -q Validate.C'("Run00001_F20_Recoils.root")'

  restG4-examples-07:
    name: "Example 07: Decay"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/07.FullChainDecay/
          restG4 fullChain.rml -o Run00001_U238_FullChainDecay.root
          restRoot -b -q Validate.C'("Run00001_U238_FullChainDecay.root", 16)'
          restG4 singleDecay.rml -o Run00002_U238_SingleChainDecay.root
          restRoot -b -q Validate.C'("Run00002_U238_SingleChainDecay.root", 1)'
          export REST_ISOTOPE=Be7
          restG4 singleDecay.rml
          restRoot -b -q Validate.C'("Run00002_Be7_SingleChainDecay.root", 1)'

  restG4-examples-08:
    name: "Example 08: Alphas"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/08.Alphas/
          mkdir data
          export REST_ENERGY=5
          export REST_FOIL=1
          restG4 alphas.rml -o data/Run_5MeV_1um.root
          restManager --c analysis.rml --f data/Run_5MeV_1um.root
          export REST_ENERGY=5
          export REST_FOIL=5
          restG4 alphas.rml -o data/Run_5MeV_5um.root
          restManager --c analysis.rml --f data/Run_5MeV_5um.root
          export REST_ENERGY=1
          export REST_FOIL=5
          restG4 alphas.rml -o data/Run_1MeV_1um.root
          restManager --c analysis.rml --f data/Run_1MeV_1um.root
          restManager --c plots.rml --f "data/*g4Ana*root" --batch
          restRoot -b -q Validate.C

  restG4-examples-09:
    name: "Example 09: Shielding"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/09.Pb210_Shield/
          restG4 Pb210.rml -o Run00001_Pb210_Shielding.root
          restRoot -b -q Validate.C'("Run00001_Pb210_Shielding.root")'

  restG4-examples-10:
    name: "Example 10: Geometries"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/10.Geometries/
          restG4 Assembly.rml -o Run00001_Assembly_Assembly.root
          restRoot -b -q Validate.C'("Run00001_Assembly_Assembly.root")'

  restG4-examples-11:
    name: "Example 11: X-Rays"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Launching Gammas
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/11.Xrays/
          restG4 xrays.rml -o xrays_simulation.root
          restManager --c analysis.rml --f xrays_simulation.root --o xrays_simulation_analysis.root
          restRoot -b -q GetQE.C'("xrays_simulation_analysis.root")'
      - name: Launching Fe55 source
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/11.Xrays/
          restG4 Fe55.rml -o Fe55_simulation.root
          restManager --c analysis.rml --f Fe55_simulation.root --o Fe55_simulation_analysis.root
          restRoot -b -q ValidateFe55.C'("Fe55_simulation_analysis.root")'

  restG4-examples-12:
    name: "Example 12: Generators"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-01 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/12.Generators/
          restG4 CosineSquaredCircle.rml -o CosineSquaredCircle.root
          restRoot -b -q ValidateCosineSquared.C'("CosineSquaredCircle.root")'
          restG4 CosmicGenerator.rml -o CosmicGenerator.root
          restRoot -b -q ValidateCosmicGenerator.C'("CosmicGenerator.root")'

  restG4-examples-13:
    name: "Example 13: IAXO"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-10 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/13.IAXO/
          restG4 Neutrons.rml -o Neutrons.root
          restRoot -b -q Validate.C'("Neutrons.root")'

  restG4-examples-14:
    name: "Example 14: DetectorResponse"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics
    needs: [ check-installation, restG4-examples-10 ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/14.DetectorResponse/
          source launchResponse.sh
          restManager --c analysis.rml --f RestG4_XenonNeon_30Pct_1.5bar_Drift3cm_Size6cm.root
          restRoot -b -q ValidateResponse.C'("G4Analysis_XenonNeon_30Pct_1.5bar_Drift3cm_Size6cm.root")'

  # Reference version of Geant4

  framework-install-reference:
    name: Install framework with restG4 on an older reference version of Geant4 (v10.4.3)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics-reference-jun2022
    steps:
      - name: Print version of dependencies for image
        run: version.sh
      - name: Build and install
        uses: rest-for-physics/framework/.github/actions/build@master
        with:
          cmake-flags: "-DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DREST_WELCOME=ON -DREST_G4=ON -DCMAKE_INSTALL_PREFIX=${{ env.REST_INSTALL_PATH }}"
          branch: ${{ env.BRANCH_NAME }}
      - name: Use old materials for reference Geant4 version
        run: |
          cd ${{ env.REST_INSTALL_PATH }}
          find . -name "*.gdml" | xargs sed -i 's/https:\/\/rest-for-physics.github.io\/materials\/rest.xml/https:\/\/rest-for-physics.github.io\/materials\/legacy\/v1.4\/rest.xml/g'
      - name: Cache framework installation
        id: framework-install-restG4-cache-reference
        uses: actions/cache@v3
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}

  check-installation-reference:
    name: Check ref framework and restG4 are accessible
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics-reference-jun2022
    needs: [ framework-install-reference ]
    steps:
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache-reference
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Check root
        run: |
          root-config --version
          root -b -q
      - name: Check framework
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cat ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cat ${{ env.REST_INSTALL_PATH }}/bin/rest-config
          rest-config --welcome
      - name: Check restG4
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          restG4 --help

  restG4-examples-01-reference:
    name: "Reference Example 01: NLDBD"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics-reference-jun2022
    needs: [ framework-install-reference, check-installation-reference ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache-reference
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/01.NLDBD/
          restG4 NLDBD.rml -o Run00001_NLDBD_Test.root
          restRoot -b -q Validate.C'("Run00001_NLDBD_Test.root")'

  restG4-examples-06-reference:
    name: "Reference Example 06: Ion recoils"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics-reference-jun2022
    needs: [ framework-install-reference, check-installation-reference ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache-reference
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/06.IonRecoils/
          restG4 recoils.rml -o Run00001_F20_Recoils.root
          restRoot -b -q Validate.C'("Run00001_F20_Recoils.root")'

  restG4-examples-07-reference:
    name: "Reference Example 07: Decay"
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics-reference-jun2022
    needs: [ framework-install-reference, check-installation-reference ]
    steps:
      - uses: actions/checkout@v3
      - name: Restore cache
        uses: actions/cache@v3
        id: framework-install-restG4-cache-reference
        with:
          path: ${{ env.REST_INSTALL_PATH }}
          key: ${{ env.BRANCH_NAME }}-${{ github.sha }}
      - name: Run example
        run: |
          source ${{ env.REST_INSTALL_PATH }}/thisREST.sh
          cd ${{ env.REST_INSTALL_PATH }}/examples/restG4/07.FullChainDecay/
          restG4 fullChain.rml -o Run00001_U238_FullChainDecay.root
          restRoot -b -q Validate.C'("Run00001_U238_FullChainDecay.root", 16)'
          restG4 singleDecay.rml -o Run00002_U238_SingleChainDecay.root
          restRoot -b -q Validate.C'("Run00002_U238_SingleChainDecay.root", 1)'
          export REST_ISOTOPE=Be7
          restG4 singleDecay.rml
          restRoot -b -q Validate.C'("Run00002_Be7_SingleChainDecay.root", 1)'

  # Build restG4 with `master` version of framework. This job can fail without failing the workflow
  framework-install-master:
    name: Install framework with restG4 on `master` version of framework just with Geant4lib (on the ref found on framework)
    runs-on: ubuntu-latest
    container:
      image: ghcr.io/lobis/root-geant4-garfield:rest-for-physics-dev
    steps:
      - name: Checkout framework
        run: |
          git clone https://github.com/rest-for-physics/framework.git ${{ env.REST_FRAMEWORK_SOURCE_DIR }}
          cd ${{ env.REST_FRAMEWORK_SOURCE_DIR }}
          git log -1 --stat # should always be on master branch
      - uses: actions/checkout@v3
      - name: Setup, build and install
        continue-on-error: true
        run: |
          cd ${{ env.REST_FRAMEWORK_SOURCE_DIR }}
          git submodule init source/libraries/geant4 && git submodule update source/libraries/geant4
          cd ${{ env.REST_FRAMEWORK_SOURCE_DIR }}
          rm -rf source/packages/restG4/ && cp -r $GITHUB_WORKSPACE source/packages/restG4
          cd ${{ env.REST_FRAMEWORK_SOURCE_DIR }}
          mkdir -p ${{ env.REST_FRAMEWORK_SOURCE_DIR }}/build && cd ${{ env.REST_FRAMEWORK_SOURCE_DIR }}/build
          cmake ../ -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} -DREST_WELCOME=ON -DREST_G4=ON -DCMAKE_INSTALL_PREFIX=${{ env.REST_PATH }}
          make -j4 install
